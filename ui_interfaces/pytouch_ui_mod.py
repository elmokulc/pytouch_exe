# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'pytouch.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(837, 686)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 837, 22))
        self.menubar.setObjectName("menubar")
        self.menuFichier = QtWidgets.QMenu(self.menubar)
        self.menuFichier.setObjectName("menuFichier")
        self.menuEdition = QtWidgets.QMenu(self.menubar)
        self.menuEdition.setObjectName("menuEdition")
        self.menuAction = QtWidgets.QMenu(self.menuEdition)
        self.menuAction.setObjectName("menuAction")
        self.menuRecherche = QtWidgets.QMenu(self.menubar)
        self.menuRecherche.setObjectName("menuRecherche")
        self.menuOutils = QtWidgets.QMenu(self.menubar)
        self.menuOutils.setObjectName("menuOutils")
        self.menuDebug = QtWidgets.QMenu(self.menuOutils)
        self.menuDebug.setObjectName("menuDebug")
        self.menuAffichage = QtWidgets.QMenu(self.menubar)
        self.menuAffichage.setObjectName("menuAffichage")
        self.menuVolets = QtWidgets.QMenu(self.menuAffichage)
        self.menuVolets.setObjectName("menuVolets")
        self.menuAide = QtWidgets.QMenu(self.menubar)
        self.menuAide.setObjectName("menuAide")
        self.menuParam_tres = QtWidgets.QMenu(self.menubar)
        self.menuParam_tres.setObjectName("menuParam_tres")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionQuitter = QtWidgets.QAction(MainWindow)
        self.actionQuitter.setObjectName("actionQuitter")
        self.actionRed_marrer = QtWidgets.QAction(MainWindow)
        self.actionRed_marrer.setObjectName("actionRed_marrer")
        self.action_videoStream = QtWidgets.QAction(MainWindow)
        self.action_videoStream.setCheckable(True)
        self.action_videoStream.setChecked(True)
        self.action_videoStream.setObjectName("action_videoStream")
        self.actionThreads_info = QtWidgets.QAction(MainWindow)
        self.actionThreads_info.setCheckable(True)
        self.actionThreads_info.setChecked(False)
        self.actionThreads_info.setObjectName("actionThreads_info")
        self.actionConfigurateur_cam_ra = QtWidgets.QAction(MainWindow)
        self.actionConfigurateur_cam_ra.setObjectName("actionConfigurateur_cam_ra")
        self.action_cameraParameters = QtWidgets.QAction(MainWindow)
        self.action_cameraParameters.setCheckable(True)
        self.action_cameraParameters.setChecked(True)
        self.action_cameraParameters.setObjectName("action_cameraParameters")
        self.actionCalibration_source_files = QtWidgets.QAction(MainWindow)
        self.actionCalibration_source_files.setCheckable(True)
        self.actionCalibration_source_files.setChecked(True)
        self.actionCalibration_source_files.setObjectName("actionCalibration_source_files")
        self.actionXYZ_Positions_graphs = QtWidgets.QAction(MainWindow)
        self.actionXYZ_Positions_graphs.setCheckable(True)
        self.actionXYZ_Positions_graphs.setChecked(True)
        self.actionXYZ_Positions_graphs.setObjectName("actionXYZ_Positions_graphs")
        self.actionAjouter_rect_ROI = QtWidgets.QAction(MainWindow)
        self.actionAjouter_rect_ROI.setObjectName("actionAjouter_rect_ROI")
        self.actionAjouter_ligne_ROI = QtWidgets.QAction(MainWindow)
        self.actionAjouter_ligne_ROI.setObjectName("actionAjouter_ligne_ROI")
        self.actionSupprimer_rect_ROI = QtWidgets.QAction(MainWindow)
        self.actionSupprimer_rect_ROI.setObjectName("actionSupprimer_rect_ROI")
        self.actionSupprimer_ligne_ROI = QtWidgets.QAction(MainWindow)
        self.actionSupprimer_ligne_ROI.setObjectName("actionSupprimer_ligne_ROI")
        self.actionComposite_parameters = QtWidgets.QAction(MainWindow)
        self.actionComposite_parameters.setCheckable(True)
        self.actionComposite_parameters.setChecked(True)
        self.actionComposite_parameters.setObjectName("actionComposite_parameters")
        self.actionPrint_logs = QtWidgets.QAction(MainWindow)
        self.actionPrint_logs.setCheckable(False)
        self.actionPrint_logs.setObjectName("actionPrint_logs")
        self.actionShow_Physical_Plot_Dock_Widget = QtWidgets.QAction(MainWindow)
        self.actionShow_Physical_Plot_Dock_Widget.setCheckable(True)
        self.actionShow_Physical_Plot_Dock_Widget.setObjectName("actionShow_Physical_Plot_Dock_Widget")
        self.actionShow_Composite_Plots_Dock_Widget = QtWidgets.QAction(MainWindow)
        self.actionShow_Composite_Plots_Dock_Widget.setCheckable(True)
        self.actionShow_Composite_Plots_Dock_Widget.setObjectName("actionShow_Composite_Plots_Dock_Widget")
        self.actionLog_console = QtWidgets.QAction(MainWindow)
        self.actionLog_console.setCheckable(True)
        self.actionLog_console.setChecked(True)
        self.actionLog_console.setEnabled(True)
        self.actionLog_console.setObjectName("actionLog_console")
        self.actionNavigation_tools = QtWidgets.QAction(MainWindow)
        self.actionNavigation_tools.setCheckable(True)
        self.actionNavigation_tools.setChecked(True)
        self.actionNavigation_tools.setEnabled(True)
        self.actionNavigation_tools.setObjectName("actionNavigation_tools")
        self.actionTarget_visualizer = QtWidgets.QAction(MainWindow)
        self.actionTarget_visualizer.setCheckable(True)
        self.actionTarget_visualizer.setChecked(True)
        self.actionTarget_visualizer.setEnabled(True)
        self.actionTarget_visualizer.setObjectName("actionTarget_visualizer")
        self.actionSTL_visualizer = QtWidgets.QAction(MainWindow)
        self.actionSTL_visualizer.setCheckable(True)
        self.actionSTL_visualizer.setChecked(True)
        self.actionSTL_visualizer.setEnabled(True)
        self.actionSTL_visualizer.setObjectName("actionSTL_visualizer")
        self.menuFichier.addAction(self.actionQuitter)
        self.menuFichier.addAction(self.actionRed_marrer)
        self.menuAction.addAction(self.actionAjouter_rect_ROI)
        self.menuAction.addAction(self.actionAjouter_ligne_ROI)
        self.menuAction.addAction(self.actionSupprimer_rect_ROI)
        self.menuAction.addAction(self.actionSupprimer_ligne_ROI)
        self.menuEdition.addAction(self.menuAction.menuAction())
        self.menuDebug.addAction(self.actionPrint_logs)
        self.menuDebug.addAction(self.actionShow_Physical_Plot_Dock_Widget)
        self.menuDebug.addAction(self.actionShow_Composite_Plots_Dock_Widget)
        self.menuOutils.addAction(self.menuDebug.menuAction())
        self.menuVolets.addAction(self.action_videoStream)
        self.menuVolets.addAction(self.action_cameraParameters)
        self.menuVolets.addAction(self.actionComposite_parameters)
        self.menuVolets.addAction(self.actionLog_console)
        self.menuVolets.addAction(self.actionNavigation_tools)
        self.menuVolets.addAction(self.actionTarget_visualizer)
        self.menuVolets.addAction(self.actionSTL_visualizer)
        self.menuAffichage.addAction(self.menuVolets.menuAction())
        self.menuParam_tres.addAction(self.actionConfigurateur_cam_ra)
        self.menubar.addAction(self.menuFichier.menuAction())
        self.menubar.addAction(self.menuEdition.menuAction())
        self.menubar.addAction(self.menuParam_tres.menuAction())
        self.menubar.addAction(self.menuRecherche.menuAction())
        self.menubar.addAction(self.menuOutils.menuAction())
        self.menubar.addAction(self.menuAffichage.menuAction())
        self.menubar.addAction(self.menuAide.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.menuFichier.setTitle(_translate("MainWindow", "Fichier"))
        self.menuEdition.setTitle(_translate("MainWindow", "Editio&n"))
        self.menuAction.setTitle(_translate("MainWindow", "&Action"))
        self.menuRecherche.setTitle(_translate("MainWindow", "&Recherche"))
        self.menuOutils.setTitle(_translate("MainWindow", "O&utils"))
        self.menuDebug.setTitle(_translate("MainWindow", "&Debug"))
        self.menuAffichage.setTitle(_translate("MainWindow", "Afficha&ge"))
        self.menuVolets.setTitle(_translate("MainWindow", "&Volets"))
        self.menuAide.setTitle(_translate("MainWindow", "Ai&de"))
        self.menuParam_tres.setTitle(_translate("MainWindow", "Param&ètres"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.actionQuitter.setText(_translate("MainWindow", "&Quitter"))
        self.actionQuitter.setStatusTip(_translate("MainWindow", "Quitter"))
        self.actionQuitter.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionRed_marrer.setText(_translate("MainWindow", "&Redémarrer"))
        self.actionRed_marrer.setStatusTip(_translate("MainWindow", "Redémarrer"))
        self.actionRed_marrer.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.action_videoStream.setText(_translate("MainWindow", "&Video stream"))
        self.actionThreads_info.setText(_translate("MainWindow", "Threads info"))
        self.actionConfigurateur_cam_ra.setText(_translate("MainWindow", "&Configurateur caméra"))
        self.action_cameraParameters.setText(_translate("MainWindow", "&Camera parameters"))
        self.actionCalibration_source_files.setText(_translate("MainWindow", "Calibration source files"))
        self.actionXYZ_Positions_graphs.setText(_translate("MainWindow", "XYZ Positions graphs"))
        self.actionAjouter_rect_ROI.setText(_translate("MainWindow", "&Ajouter rect ROI"))
        self.actionAjouter_ligne_ROI.setText(_translate("MainWindow", "Ajouter &ligne ROI"))
        self.actionSupprimer_rect_ROI.setText(_translate("MainWindow", "&Supprimer rect ROI"))
        self.actionSupprimer_ligne_ROI.setText(_translate("MainWindow", "Supprimer ligne &ROI"))
        self.actionComposite_parameters.setText(_translate("MainWindow", "Composite &parameters"))
        self.actionPrint_logs.setText(_translate("MainWindow", "&Print logs"))
        self.actionPrint_logs.setShortcut(_translate("MainWindow", "Ctrl+D"))
        self.actionShow_Physical_Plot_Dock_Widget.setText(_translate("MainWindow", "&Show Physical Plots Dock Widget"))
        self.actionShow_Physical_Plot_Dock_Widget.setShortcut(_translate("MainWindow", "Ctrl+&"))
        self.actionShow_Composite_Plots_Dock_Widget.setText(_translate("MainWindow", "Show Plots &Composite Dock Widget"))
        self.actionShow_Composite_Plots_Dock_Widget.setShortcut(_translate("MainWindow", "Ctrl+É"))
        self.actionLog_console.setText(_translate("MainWindow", "C&onsole"))
        self.actionNavigation_tools.setText(_translate("MainWindow", "&Navigation tools"))
        self.actionTarget_visualizer.setText(_translate("MainWindow", "&Target visualizer"))
        self.actionSTL_visualizer.setText(_translate("MainWindow", "&STL visualizer"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
